<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>每周见闻分享：2025-02-02 - 2025-02-09</title>
    <link href="/weekly/2025/02/09/05-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250202_20250209/"/>
    <url>/weekly/2025/02/09/05-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250202_20250209/</url>
    
    <content type="html"><![CDATA[<p>每周见闻分享：2025-02-02 - 2025-02-09</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>1、<a href="https://yazi-rs.github.io/">Yazi</a>[^1]</strong></p><p>标签：Tools,Mac</p><p>闲逛 B 站时推送的视频，被名字吸引。是一个终端的文件管理工具。特别适合平时在终端工作的同学。作者也是一个国人大佬：三咲雅 · Misaki Masa</p><p>使用下来体验很棒，绝非传统的 cd&#x2F;ls&#x2F;cat 命令组合能比的。还能配合 Neovim 非常丝滑。</p><p>推荐插件：</p><ol><li>yazi.nvim: Neovim 插件。 <a href="https://github.com/mikavilpas/yazi.nvim">https://github.com/mikavilpas/yazi.nvim</a></li><li>full-border: 瞬间让 yazi 的界面高大上起来。 <a href="https://github.com/yazi-rs/plugins/tree/main/full-border.yazi">https://github.com/yazi-rs/plugins/tree/main/full-border.yazi</a></li><li>icons-brew: 为不同的文件添加 icon，让界面更美观。 <a href="https://github.com/lpnh/icons-brew.yazi">https://github.com/lpnh/icons-brew.yazi</a></li></ol><p><img src="https://yazi-rs.github.io/img/logo.png"></p><p><strong>2、<a href="https://readpo.com/zh/poster">ReadPo</a>[^4]</strong></p><p>标签：Tools,AI</p><p>在寻找 Markdown 转图片时找到的这个网站。提供了一个免费的在线转换工具。</p><p>这个网站主要的功能是基于主题的 AI 辅助写作工具。同一个主题下可以订阅不同的源，如 Google、RSS 等，AI 可以根据这些内容生成文章。主要的应用场景就是新闻、资讯介绍、事件追踪等文章。</p><p>免费版支持 2 个主题，每月 30 个 cridets。每个主题可以根据 5 个文章生成 AI 总结内容，挺有意思的工具。</p><p><img src="/weekly/images/2025/readpo.webp"></p><hr><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p><strong>1、<a href="https://www.infoworld.com/article/2269523/put-business-logic-in-the-application-not-the-database.html">Put business logic in the application, not the database</a>[^2]</strong></p><p>标签：架构,Design</p><p>有些年头的文章了，其主旨是尽可能地把业务逻辑放到应用层而非数据库，并且给出了原因：</p><ol><li>数据库比起应用层，资源更加稀缺。</li><li>逻辑后移到数据库会增加负担，造成应用层资源的浪费。</li><li>数据库拓展成本比应用层更高。</li></ol><p>应该是针对 SQL 存储过程写的。我在实际工作中主要使用 MongoDB，基本不会出现业务逻辑在数据库的情况也没人会在业务中做聚合。（真做了也过不了 Code Review）</p><p>尽管如此，数据库的成本也远高于服务器的成本。上云之后，拓展不是问题，剩下的只是钱的问题。</p><p><img src="https://www.infoworld.com/wp-content/uploads/2024/06/broken-chain_metal_link_breach_security-100777433-orig.jpg?resize=1024,683&quality=50&strip=all"></p><p><strong>2、<a href="https://www.joshwcomeau.com/css/custom-css-reset/">A Modern CSS Reset • Josh W. Comeau</a>[^3]</strong></p><p>标签：CSS,前端</p><p>这篇介绍了现代版本的 CSS reset。10 年前各个浏览器之间差异很大，开发时会用上一份 CSS reset 样式尽可能抹平这些差异。</p><p>比较经典的是 Eric Meyers 2011 年的版本，早年入坑的前端小伙伴可能都有点印象。 <a href="https://meyerweb.com/eric/tools/css/reset/">https://meyerweb.com/eric/tools/css/reset/</a></p><p>随着 IE 退场已经对 CSS 新特性的支持增加。如今的 CSS reset 内容要简洁许多。我现在主要做 Node.js 服务端开发，就不去逐条查看了。作者针对每一条都有说明，感兴趣的前端同学可以去看看。</p><p><img src="https://www.joshwcomeau.com/images/og-custom-css-reset.png"></p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h2><ul><li>[1] Yazi: <a href="https://yazi-rs.github.io/">https://yazi-rs.github.io/</a></li><li>[2] Put business logic in the application, not the database: <a href="https://www.infoworld.com/article/2269523/put-business-logic-in-the-application-not-the-database.html">https://www.infoworld.com/article/2269523/put-business-logic-in-the-application-not-the-database.html</a></li><li>[3] A Modern CSS Reset • Josh W. Comeau: <a href="https://www.joshwcomeau.com/css/custom-css-reset/">https://www.joshwcomeau.com/css/custom-css-reset/</a></li><li>[4] ReadPo: <a href="https://readpo.com/zh/poster">https://readpo.com/zh/poster</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>每周见闻分享：2025-01-26 - 2025-02-02</title>
    <link href="/weekly/2025/02/02/04-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250126_20250202/"/>
    <url>/weekly/2025/02/02/04-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250126_20250202/</url>
    
    <content type="html"><![CDATA[<p>每周见闻分享：2025-01-26 - 2025-02-02</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>1、<a href="https://ghostty.org/">Ghostty</a>[^1]</strong></p><p>标签：Tools</p><p>一个终端模拟器，类似 iTerm2、Tabby。利用了 GPU 和 CPU 加速。</p><p>目前使用下来体验不错，速度比 iTerm2 和 Tabby 要快且无缝支持 zsh 的配置。唯一的缺点是配置文件需要自己去看文档写，没有 GUI 界面。</p><p><img src="https://ghostty.org/social-share-card.jpg"></p><hr><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p><strong>1、<a href="https://arktype.io/">ArkType</a>[^2]</strong></p><p>标签：Resource,JavaScript,TypeScript</p><p>一个类似于 Joi 的校验库。官网上写着有更好的错误提示、性能上也比其他库如 Zod、Yup 要强。</p><p>工作中使用 Joi，但苦于其效率和多版本之间的冲突也一直在看其他类似的库。这个库比较新，生态方面并没有 Zod 完善，考虑到迁移和文档自动生成的成本，选择 Zod 的可能性更高。</p><p><img src="/weekly/images/2025/arktype.webp"></p><p><strong>2、<a href="https://nalanj.dev/posts/safe-assignment/">Safe Assignment | Alan Johnson</a>[^3]</strong></p><p>标签：JavaScript</p><p>一个关于 JS try&#x2F;catch 语法的新提案。<br>const [error, value] ?&#x3D; maybeThrows();<br>看着像 Go 的语法，主要是节约了 try&#x2F;catch 的代码长度以及避免在外层多定义 let 来对错误做处理。</p><p>文章给出了类似的实现，看了更有种回调时期的感觉。不过同样的讨论，之前翻译过的一篇感觉说的更清新一些。<br>译：在 TypeScript 中像 Go 和 Rust 那样处理错误？没有 Try&#x2F;Catch(<a href="https://konata9.github.io/2024/05/10/2024/translate-ts-with-go-and-rust-errors/)">https://konata9.github.io/2024/05/10/2024/translate-ts-with-go-and-rust-errors/)</a></p><p><img src="/weekly/images/2025/safe-assignment.webp"></p><p><strong>3、<a href="https://docs.timetime.in/blog/how-long-is-a-second-in-js/">How long is a second in JavaScript? | TimeTime</a>[^4]</strong></p><p>标签：JavaScript</p><p>很不错的一篇文章，从 1 秒入手介绍了 JavaScript 中时间相关的知识。 UTC 和 POSIX 的区别，特别是对于闰秒的处理。更多的是通用概念的介绍。</p><p><img src="https://external-preview.redd.it/problematic-second-how-the-leap-second-occurring-only-27-v0-Z9P05vL4s6Z3mcXjAxcxwy6C8p64zhxV_-vlWRmRmkQ.jpg?auto=webp&s=e7112eb8e30bef1ac3b1cb98c817c9f48b7bd0a2"></p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h2><ul><li>[1] Ghostty: <a href="https://ghostty.org/">https://ghostty.org/</a></li><li>[2] ArkType: <a href="https://arktype.io/">https://arktype.io/</a></li><li>[3] Safe Assignment | Alan Johnson: <a href="https://nalanj.dev/posts/safe-assignment/">https://nalanj.dev/posts/safe-assignment/</a></li><li>[4] How long is a second in JavaScript? | TimeTime: <a href="https://docs.timetime.in/blog/how-long-is-a-second-in-js/">https://docs.timetime.in/blog/how-long-is-a-second-in-js/</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>每周见闻分享：2025-01-19 - 2025-01-26</title>
    <link href="/weekly/2025/01/26/03-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250119_20250126/"/>
    <url>/weekly/2025/01/26/03-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250119_20250126/</url>
    
    <content type="html"><![CDATA[<p>每周见闻分享：2025-01-19 - 2025-01-26</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p><strong>1、<a href="https://blog.bytebytego.com/p/ep146-the-open-source-ai-stack">EP146: The Open Source AI Stack</a>[^1]</strong></p><p>标签：架构</p><p>ByteByteGo 的 Newsletter。可以用 RSS Hub 作为 RSS 订阅。每周一篇都是和架构相关内容。图片做的非常棒。</p><p>这篇我着重看了鉴权方式的部分。Cookies Vs Sessions Vs JWT Vs PASETO 介绍了常见的几种鉴权方式以及优缺点。除了 PASETO 没有接触过，之后要找机会了解一下。</p><p><img src="https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c328642-7222-4127-a6c5-16614e010022_1283x1536.jpeg"></p><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>1、<a href="https://www.dev-life.site/">自洽的程序员</a>[^2]</strong></p><p>标签：Life,工作,思考</p><p>我看的两个周刊都在推这本书。书名虽然带着“程序员”，但内容主要集中于调整工作中的心态。每一篇都很短，阅读起来没有负担。没有专业名词、没有方法论，更像是一个学长&#x2F;前辈跟你聊天的感觉， 轻松的同时也有所收获。</p><p>我阅读了第三章并回顾工作中的一些表现，确实还有需要改进的地方。很受用，非常值得一读。</p><p>放一些我认为不错的观点：<br> 工作中的挣扎就像人生的必修课：不是你的错，但要你来解决。不是你能控制的，但要你来负责。不是你想要的，但要你来面对。</p><p> 工作就像人生的一个维度：它很重要，但不是唯一。它需要投入，但要有度。它值得认真，但别太执着。</p><hr><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>1、<a href="https://d2lang.com/">Home | D2 Documentation</a>[^3]</strong></p><p>标签：Tools</p><p>类似 Markdown 中作图的方式，通过写代码的方式来制作类图、流程图等。语法比 Mermaid 要复杂，但相对的做出的图片的效果也比 Mermaid 更好。</p><p>个人还是比较喜欢代码做图的方式，容易保存和修改。等有机会试一下。</p><p><img src="https://d2lang.com/img/opengraph.png"></p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h2><ul><li>[1] EP146: The Open Source AI Stack: <a href="https://blog.bytebytego.com/p/ep146-the-open-source-ai-stack">https://blog.bytebytego.com/p/ep146-the-open-source-ai-stack</a></li><li>[2] 自洽的程序员: <a href="https://www.dev-life.site/">https://www.dev-life.site/</a></li><li>[3] Home | D2 Documentation: <a href="https://d2lang.com/">https://d2lang.com/</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>每周见闻分享：2025-01-12 - 2025-01-19</title>
    <link href="/weekly/2025/01/19/02-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250112_20250119/"/>
    <url>/weekly/2025/01/19/02-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250112_20250119/</url>
    
    <content type="html"><![CDATA[<p>每周见闻分享：2025-01-12 - 2025-01-19</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>1、<a href="https://icemenubar.app/">Ice - Menu Bar Manager</a>[^1]</strong></p><p>标签：Tools,Mac</p><p>Mac 的 menu bar 小工具，拯救因刘海屏显示不下的小图标。之前用过 Hidden。但 Hidden 展开后对被刘海挡住的部分还是无能为力。而 Ice 则直接把隐藏的图标展示到 menu bar 下面，避免了这个问题。</p><p><img src="https://icemenubar.app/gallery_gen/726e843ac2a8881c562e1bc64c5b560f_fit.svg"></p><p><strong>2、<a href="https://inputsource.pro/zh-CN">Input Source Pro</a>[^2]</strong></p><p>标签：Tools,Mac</p><p>当前输入法提示的小工具，还可以定制 APP 的默认输入法。对于工作时在 Teams 和编辑器之间来回切换很有用。</p><p><img src="https://inputsource.pro/img/illustration.jpg?1736741258334"></p><p><strong>3、<a href="https://slea.ai/zh-CN">用Slea.ai免费AI Logo生成器轻松创建专业Logo</a>[^5]</strong></p><p>标签：Tools</p><p>免费生成 AI Logo 的工具网站。对不擅长设计的开发者会有所帮助。</p><p><img src="https://slea.ai/logo.png"></p><hr><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p><strong>1、<a href="https://tomekdev.com/posts/benchmarking-graphql-solutions-in-the-js-ts-landscape">Benchmarking GraphQL solutions in the JS&#x2F;TS landscape</a>[^3]</strong></p><p>标签：JavaScript,Node.js,GraphQL</p><p>针对 GraphQL 在不同的 Node.js 运行时（Node、Bun、Deno）和不同框架（Nest、Fastify、Express）下的性能测试。作者详细列举了 GraphQL 的技术栈、框架的选择以及测试方式。</p><p>结论：<br>按照 NestJS 教程搭建的 GraphQL Server 的性能最差。<br>Fastify + mercurius + graphql-jit 在 Node.js 的运行时下的组合性能最佳，并且解析器对性能的影响十分严重，能降低 80% 性能。只有必要时才应该开启。</p><p><img src="https://tomekdev.com/static/cce89cde80553304bfcd2a589fef4595/012-graphql-benchmarks.png"></p><p><strong>2、<a href="https://blog.logto.io/css-only-infinite-scroll">CSS-only infinite scrolling carousel animation · Logto blog</a>[^6]</strong></p><p>标签：CSS,前端</p><p>纯 CSS 实现的无限滚动效果，支持鼠标悬浮暂停。通过 Flex + animation 组合实现。文章讲的很好，一步一步配合示例代码十分易懂。感兴趣的小伙伴可以看看。现代 CSS 比起当年做前端时能做的太多了。</p><p><img src="https://uploads.strapi.logto.io/2/css_only_animation_infinite_scrolling_carousel_9a669693ab.webp"></p><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>1、<a href="https://1q43.blog/post/10851/">胖东来是非学不可了 | 虹线</a>[^4]</strong></p><p>标签：思考</p><p>从另一个角度分析了胖东来出圈的原因。重点讲了胖东来是如何成为“神话”的原因。时代的变化凸显了胖东来的存在，有一种潮水褪去后的感觉。</p><blockquote><p>胖东来模式在上一个时代是不合时宜的，它更像是下一个时代的最优解，即宏观存量市场下的微观无杠杆经营。</p><p>在上一个时代，注定了不用杠杆打不过用杠杆的，毕竟无论是拿地、选品还是招聘，你的竞争对手只要想都能以无视经济规律，“不计商业成本”的方式与你竞争。</p><p> 但在下一个去杠杆时代，一切都会反转，不用杠杆能活下来是第一位，能经营好则能胜出。这才是胖东来“优秀了20年”，这么晚才“出圈”的原因。</p></blockquote><p>分析的很有意思，值得详细一读。</p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h2><ul><li>[1] Ice - Menu Bar Manager: <a href="https://icemenubar.app/">https://icemenubar.app/</a></li><li>[2] Input Source Pro: <a href="https://inputsource.pro/zh-CN">https://inputsource.pro/zh-CN</a></li><li>[3] Benchmarking GraphQL solutions in the JS&#x2F;TS landscape: <a href="https://tomekdev.com/posts/benchmarking-graphql-solutions-in-the-js-ts-landscape">https://tomekdev.com/posts/benchmarking-graphql-solutions-in-the-js-ts-landscape</a></li><li>[4] 胖东来是非学不可了 | 虹线: <a href="https://1q43.blog/post/10851/">https://1q43.blog/post/10851/</a></li><li>[5] 用Slea.ai免费AI Logo生成器轻松创建专业Logo: <a href="https://slea.ai/zh-CN">https://slea.ai/zh-CN</a></li><li>[6] CSS-only infinite scrolling carousel animation · Logto blog: <a href="https://blog.logto.io/css-only-infinite-scroll">https://blog.logto.io/css-only-infinite-scroll</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>每周见闻分享：2025-01-05 - 2025-01-12</title>
    <link href="/weekly/2025/01/12/01-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250105_20250112/"/>
    <url>/weekly/2025/01/12/01-%E6%AF%8F%E5%91%A8%E8%A7%81%E9%97%BB-20250105_20250112/</url>
    
    <content type="html"><![CDATA[<p>每周见闻分享：2025-01-05 - 2025-01-12</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>1、<a href="https://www.v2ex.com/t/1102126">我是如何从零开始手搓一个独立游戏并上架 Steam 的 - V2EX</a>[^1]</strong></p><p>标签：Life,励志</p><p>讲述了作者历经 5 年制作独立游戏《中国式加班》的完整过程。<br>包括了构思和规划、美术、引擎选型、剧本构思。中途一度因资源不足夭折，最后又借助 AI 完成第一版并成功上架 Steam。</p><p>非常佩服作者的坚持。AI 降低了门槛，让很多事情变得可能。特别赞同完成比完美更重要这一点。过早追求完美，反而可能是最大的阻力。值得细细阅读。</p><p><img src="https://hhacker.com/wp-content/uploads/2025/01/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2025-01-01-221738.png"></p><p><strong>2、<a href="https://sspai.com/post/86260">万字干货！手把手带你根除手机&amp;短视频成瘾？ - 少数派</a>[^2]</strong></p><p>标签：自律,时间管理</p><p>我自己应该是有些手机依赖的，感觉自己能静下心做事的时间变短了。为此我打开了屏幕时间功能，某站在使用时间上确实独占鳌头。这篇文章有点长，但是讲的很详细。快消或者奶头乐通过不断地刺激会逐渐封锁认知，消磨掉我们的“有效时间”。</p><p>其中内因可以分为无聊成瘾以及放松成瘾；外因则是推荐算法。两者加持下提高对刺激的阈值，从而逐渐成瘾。类似一刀切的强行对抗，不仅需要强大的意志力而且也不能从根本上解决问题。</p><p>作者提出将日程排满以及通过引入更多好的习惯来“冲淡”刷视频的习惯，似乎比较可行。打算试着尝试一下。</p><p><img src="https://cdnfile.sspai.com/2024/02/02/article/4b718cfa0cbb0ca738087f48d106e3e8?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1"></p><p><strong>3、<a href="https://wukan.me/?p=2649">四年五个月 – 阿倫的孤獨星球</a>[^4]</strong></p><p>标签：Life,工作</p><p>讲述了作者 4 年 5 个月的时间分别在国内与国外的工作经历（都是在外企）。对比了两边的生活体验以及对产品的看法和技术氛围。有种“一方水土养一方人”的感觉。<br>国内对领导的心理按摩是造成卷的原因之一，而这背后也体现了对员工个体的尊重与信任。</p><p><img src="https://wukan.me/wp-content/uploads/2024/12/DALL%C2%B7E-2024-12-10-23.19.16-A-highly-minimalistic-and-abstract-illustration-symbolizing-the-contrast-between-two-work-cultures-formatted-in-a-16_9-aspect-ratio.-The-image-featur-768x439.webp"></p><p><strong>4、<a href="https://sspai.com/post/95152">2024年的大环境下；开了个副业淘宝店的过程记录与阶段性感悟 - 少数派</a>[^6]</strong></p><p>标签：Life,副业</p><p>被标题吸引，读完发现很有意思。<br>作者详细讲述了自己开淘宝店作为副业的过程。包括了开店、引流、定价、客服等。没有噱头，全是作者的感受。实打实的细节和干货，非常值得一读。<br>看完最深的感受是一个店背后各种事务真的很复杂。除了自己要有渠道和相应的知识外，其他的事情也很多。</p><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/44cb6954-457a-4a64-b86e-85f433992a93/f6f89fe3-fe5e-4211-ae67-9810d82f1604/stn-LrT5834M7sDxQdgk89aT6GgoFHU1j0Q6kStFGmvb.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45FSPPWI6X/20250112/us-west-2/s3/aws4_request&X-Amz-Date=20250112T150138Z&X-Amz-Expires=3600&X-Amz-Signature=282cc1b30235780f60709c64defd13c073ccdd032e026ddf0aef12d79e95b6b4&X-Amz-SignedHeaders=host&x-id=GetObject"></p><hr><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>1、<a href="https://www.ppbzy.com/">泡泡白噪音-倾听下雨的声音</a>[^3]</strong></p><p>标签：Tools</p><p>白噪音的工具网站。自带一个番茄钟和电子木鱼（笑）。最近休息在家的时候，有点没法集中，尝试一下。有预设好的模式，可以直接使用。</p><p><img src="/weekly/images/2025/ppbzy.webp"></p><p><strong>2、<a href="https://weiyen.net/articles/useful-macos-cmd-line-utilities/">Useful built-in macOS command-line utilities</a>[^5]</strong></p><p>标签：Mac</p><p>介绍了一些 Mac 内置的终端命令。我觉得比较有用的是下面几个命令，可以不用再去网上找在线工具了。</p><ol><li>查看日期的 date 命令。</li><li>生成 UUID 的 uuidgen 。</li><li>剪切板相关命令 pbcopy 和 pbpaste 。</li></ol><p><img src="https://weiyen.net/articles/useful-macos-cmd-line-utilities/oggraph.png"></p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h2><ul><li>[1] 我是如何从零开始手搓一个独立游戏并上架 Steam 的 - V2EX: <a href="https://www.v2ex.com/t/1102126">https://www.v2ex.com/t/1102126</a></li><li>[2] 万字干货！手把手带你根除手机&amp;短视频成瘾？ - 少数派: <a href="https://sspai.com/post/86260">https://sspai.com/post/86260</a></li><li>[3] 泡泡白噪音-倾听下雨的声音: <a href="https://www.ppbzy.com/">https://www.ppbzy.com/</a></li><li>[4] 四年五个月 – 阿倫的孤獨星球: <a href="https://wukan.me/?p=2649">https://wukan.me/?p=2649</a></li><li>[5] Useful built-in macOS command-line utilities: <a href="https://weiyen.net/articles/useful-macos-cmd-line-utilities/">https://weiyen.net/articles/useful-macos-cmd-line-utilities/</a></li><li>[6] 2024年的大环境下；开了个副业淘宝店的过程记录与阶段性感悟 - 少数派: <a href="https://sspai.com/post/95152">https://sspai.com/post/95152</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
